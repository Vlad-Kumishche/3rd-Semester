7 лабораторная
Тема: Контейнеры объектов. Обработка исключительных ситуаций.

Вариант 17:
Контейнер: бинарное дерево.
Итераторы: ввода и однонаправленный.
Сортировка: сортировка вставками.
Элемент контейнера: объекты класса «Деталь» со следующими данными:
id – уникальный номер,
name – наименование,
mass – вес.

Общие требования к выполнению работы
1. Рассмотреть теоретические сведения по теме лабораторной работы.
2. Cоздать проект консольной программы.
3. Реализовать класс-контейнер и класс-итератор согласно варианту. 
4. Перемещение по контейнеру и изменение элементов контейнера осуществлять
   только через итераторы. Для итераторов предусмотреть возможность доступа
   к произвольному элементу контейнера. Элементом контейнера является класс,
   заданный по варианту в 2 лабораторной работе.
5. Реализовать сортировку контейнера согласно варианту.
   Продемонстрировать работу заданных итераторов.
6. Любую работу с данными реализовывать через обработку исключительных ситуаций.
   Реализовать перегрузку операторов для контейнера и итератора. Для обработки
   всех ошибочных ситуаций использовать конструкцию try…catch(). Реализовать
   собственный класс обработки исключительной ситуации. Рассмотреть замену
   обработчиков функций terminate() и unexpected() собственными функциями.
7. Для ассоциативных контейнеров либо ключ, либо значение должны быть уникальными,
   так что на свое усмотрение выбирайте уникальное поле.
8. Для полученного варианта задания, построить контейнерный шаблонный класс
   операций над элементами данных, включающий операции:
-- добавления;
-- удаления;
-- поиска;
-- просмотра;
9. Для данного контейнерного класса предусмотреть при формировании элемента
   задание режима уникальных элементов (т.е. проверку на дублирование значений элементов).
10. В функции main создать три экземпляра шаблонного класса-контейнера
    для разных типов данных. Работа с этими объектами должна демонстрироваться на следующих операциях: добавить – просмотреть – найти – удалить – найти – просмотреть.
11. Отладить и выполнить полученную программу. Проверить обработку исключительных
    ситуаций (например, чтение из пустого стека, дублирование объектов и т.п.).
